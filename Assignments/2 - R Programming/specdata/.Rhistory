cor(DT1, y = NULL, use = "all.obs")
cor(DT1, y = NULL, use = "complete.obs")
cor(DT1, y = NULL, use = "na.or.complete")
cor(DT1, y = NULL, use = "pairwise.complete.obs")
C1 = cor(DT1, y = NULL, use = "pairwise.complete.obs")
symnum(C1)
install.packages("corrgram")
library(corrgram)
?corrgram
corrgram(C1, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="Car Milage Data in PC2/PC1 Order")
corrgram(C1, order=TRUE, lower.panel=panel.shade,upper.panel=NULL, text.panel=panel.txt,main="C1")
corrgram(C1, order=TRUE, lower.panel=panel.ellipse,upper.panel=panel.pts, text.panel=panel.txt,main="C1")
corrgram(C1, order=TRUE, lower.panel=panel.ellipse,
upper.panel=panel.pts, text.panel=panel.txt,
diag.panel=panel.minmax,
main="C1")
install.packages("ellipse")
library(ellipse)
corrgram(C1, order=TRUE, lower.panel=panel.ellipse,
upper.panel=panel.pts, text.panel=panel.txt,
diag.panel=panel.minmax,
main="C1")
tapply(DT$ER_No_Admit, list(DT$Type_Ownership), mean)
DT_omit=na.omit(DT)
tapply(DT_omit$ER_No_Admit, list(DT_omit$Type_Ownership), mean)
head(DT_omit)
tapply(DT_omit$Hospital_Admit, list(DT_omit$Type_Ownership), mean)
tapply(DT_omit$Hospital_Admit, list(DT_omit$Improve_Drugs), mean)
tapply(DT_omit$Improve_Drugs, list(DT_omit$Type_Ownership), mean)
tapply(DT_omit$Improve_Wounds, list(DT_omit$Type_Ownership), mean)
tapply(DT_omit$Improve_Bathing, list(DT_omit$Type_Ownership), mean)
tapply(DT_omit$Improve_Movement, list(DT_omit$Type_Ownership), mean)
tapply(DT_omit$Improve_Pain_Movement, list(DT_omit$Type_Ownership), mean)
mean(DT$Improve_Drugs)
mean(DT1_omit$Improve_Drugs)
mean(DT_omit$Improve_Drugs)
mean(DT_omit$Improve_Drugs,DT_omit$Improve_Wounds)
mean(c(DT_omit$Improve_Drugs,DT_omit$Improve_Wounds))
mean(DT_omit$Improve_Wounds)
DTimprove=DT_omit[mean(c(DT_omit$Improve_Drugs,DT_omit$Improve_Wounds))]
DTimprove
mean(c(DT_omit$Improve_Drugs,DT_omit$Improve_Wounds))
plotcorr(C1)
corrgram(C1, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="C1")
system.time(DT2 <- fread("\\Users\\kdivis\\Desktop\\Home_Health\\play.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
C2 = cor(DT2, y = NULL, use = "pairwise.complete.obs")
system.time(DT2 <- fread("\\Users\\kdivis\\Desktop\\Home_Health\\play.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
C2 = cor(DT2, y = NULL, use = "pairwise.complete.obs")
C2
corrgram(C2, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="C2")
corrgram(C2, order=TRUE, lower.panel=panel.ellipse,upper.panel=panel.pie, text.panel=panel.txt,main="C2")
?corrgram
corrgram(C2, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="C2")
system.time(DT3 <- fread("\\Users\\kdivis\\Desktop\\Home_Health\\HCAHPS.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
summary(DT3)
system.time(DT3 <- fread("\\Users\\kdivis\\Desktop\\Home_Health\\HCAHPS.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
summary(DT3)
DT3_omit=na.omit(DT3)
tapply(DT3_omit$Recommend, list(DT3_omit$Type_Ownership), mean)
tapply(DT3_omit$High_Rating, list(DT3_omit$Type_Ownership), mean)
tapply(DT3_omit$Professional, list(DT3_omit$Type_Ownership), mean)
tapply(DT3_omit$Communication, list(DT3_omit$Type_Ownership), mean)
tapply(DT3_omit$Discuss_Med_Pain_Safety, list(DT3_omit$Type_Ownership), mean)
tapply(Dt3_omit$High_Rating, list(DT3_omit$CCN), mean)
tapply(DT3_omit$High_Rating, list(DT3_omit$CCN), mean)
CCNmeans=tapply(DT3_omit$High_Rating, list(DT3_omit$CCN), mean)
CCNMeans[1]
CCNmeans[1]
CCNmeans[1,1]
CCNmeans[1,2]
?csvwrite
?csv.write
write.csv(CCNmeans,file="\\Users\\kdivis\\Desktop\\CCNmeans.csv")
CCNrecommend=tapply(DT3_omit$Recommend, list(DT3_omit$CCN), mean)
write.csv(CCNrecommend,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNrecommend.csv")
CCNrating=tapply(DT3_omit$High_Rating, list(DT3_omit$CCN), mean)
write.csv(CCNrating,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNrating.csv")
CCNprof=tapply(DT3_omit$Professional, list(DT3_omit$CCN), mean)
write.csv(CCNprof,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNprof.csv")
CCNcom=tapply(DT3_omit$Communication, list(DT3_omit$CCN), mean)
write.csv(CCNcom,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcom.csv")
CCNmps=tapply(DT3_omit$Discuss_Med_Pain_Safety, list(DT3_omit$CCN), mean)
write.csv(CCNmps,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNmps.csv")
summary(DT)
summary(DT_omit)
C2 = cor(DT2, y = NULL, use = "pairwise.complete.obs")
corrgram(C2, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="C2")
summary(DT1)
cor(DT1, y = NULL, use = "pairwise.complete.obs")
library(corrgram)
corrgram(C1, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="C1")
CCNhosad=tapply(DT_omit$Hospital_Admit, list(DT_omit$CCN), mean)
write.csv(CCNhosad,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNhosad.csv")
CCNer=tapply(DT_omit$ER_No_Admit, list(DT_omit$CCN), mean)
write.csv(CCNer,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNer.csv")
CCNtimely=tapply(DT_omit$Timely, list(DT_omit$CCN), mean)
write.csv(CCNtimely,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNtimely.csv")
CCNdt=tapply(DT_omit$Taught_Drugs, list(DT_omit$CCN), mean)
write.csv(CCNdt,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNdt.csv")
CCNcf=tapply(DT_omit$Check_Falling, list(DT_omit$CCN), mean)
write.csv(CCNcf,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcf.csv")
CCNcd=tapply(DT_omit$Check_Depression, list(DT_omit$CCN), mean)
write.csv(CCNcd,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcd.csv")
CCNcfs=tapply(DT_omit$Check_Flu_Shot, list(DT_omit$CCN), mean)
write.csv(CCNcfs,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcfs.csv")
CCNcps=tapply(DT_omit$Check_Pneumonia_Shot, list(DT_omit$CCN), mean)
write.csv(CCNcps,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcps.csv")
CCNdd=tapply(DT_omit$Diabetes_Doctor, list(DT_omit$CCN), mean)
write.csv(CCNdd,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNdd.csv")
CCNcp=tapply(DT_omit$Check_Pain, list(DT_omit$CCN), mean)
write.csv(CCNcp,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcp.csv")
CCNtp=tapply(DT_omit$Treat_Pain, list(DT_omit$CCN), mean)
write.csv(CCNtp,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNtp.csv")
CCNth=tapply(DT_omit$Treat_Heart_Symptoms, list(DT_omit$CCN), mean)
write.csv(CCNth,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNth.csv")
CCNpsd=tapply(DT_omit$Prevent_Sores_Doctor, list(DT_omit$CCN), mean)
write.csv(CCNpsd,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNpsd.csv")
CCNpscc=tapply(DT_omit$Prevent_Sores_Care_Plan, list(DT_omit$CCN), mean)
write.csv(CCNpscc,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNpscc.csv")
CCNcs=tapply(DT_omit$Check_Sores, list(DT_omit$CCN), mean)
write.csv(CCNcs,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcs.csv")
CCNiw=tapply(DT_omit$Improve_Walking, list(DT_omit$CCN), mean)
write.csv(CCNiw,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNiw.csv")
CCNibed=tapply(DT_omit$Improve_Bed, list(DT_omit$CCN), mean)
write.csv(CCNibed,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibed.csv")
CCNibath=tapply(DT_omit$Improve_Bathing, list(DT_omit$CCN), mean)
write.csv(CCNibath,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibath.csv")
CCNipm=tapply(DT_omit$Improve_Pain_Movement, list(DT_omit$CCN), mean)
write.csv(CCNibpm,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibpm.csv")
CCNibreath=tapply(DT_omit$Improve_Breathing, list(DT_omit$CCN), mean)
write.csv(CCNibreath,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibreath.csv")
CCNiwound=tapply(DT_omit$Improve_Wounds, list(DT_omit$CCN), mean)
write.csv(CCNiwound,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNiwound.csv")
CCNid=tapply(DT_omit$Improve_Drugs, list(DT_omit$CCN), mean)
write.csv(CCNid,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNid.csv")
system.time(CNN1 <- fread("\\Users\\kdivis\\Desktop\\CCNmeans\\CCNmeans.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
system.time(CNN2 <- fread("\\Users\\kdivis\\Desktop\\CCNmeans\\CCNmeans_b.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
CCNall=merge(CNN1,CNN2, by="CCN")
summary(CCNall)
CCN_corr=cor(CCNall, y = NULL, use = "pairwise.complete.obs")
corrgram(CCN_corr, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="CCN_corr")
CCNcp=tapply(DT_omit$Check_Pain, list(DT_omit$CCN), mean)
write.csv(CCNcp,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcp.csv")
CCNtp=tapply(DT_omit$Treat_Pain, list(DT_omit$CCN), mean)
write.csv(CCNtp,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNtp.csv")
CCNth=tapply(DT_omit$Treat_Heart_Symptoms, list(DT_omit$CCN), mean)
write.csv(CCNth,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNth.csv")
CCNpsd=tapply(DT_omit$Prevent_Sores_Doctor, list(DT_omit$CCN), mean)
write.csv(CCNpsd,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNpsd.csv")
CCNpscc=tapply(DT_omit$Prevent_Sores_Care_Plan, list(DT_omit$CCN), mean)
write.csv(CCNpscc,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNpscc.csv")
CCNcs=tapply(DT_omit$Check_Sores, list(DT_omit$CCN), mean)
write.csv(CCNcs,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNcs.csv")
CCNiw=tapply(DT_omit$Improve_Walking, list(DT_omit$CCN), mean)
write.csv(CCNiw,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNiw.csv")
CCNibed=tapply(DT_omit$Improve_Bed, list(DT_omit$CCN), mean)
write.csv(CCNibed,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibed.csv")
CCNibath=tapply(DT_omit$Improve_Bathing, list(DT_omit$CCN), mean)
write.csv(CCNibath,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibath.csv")
CCNipm=tapply(DT_omit$Improve_Pain_Movement, list(DT_omit$CCN), mean)
write.csv(CCNibpm,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibpm.csv")
CCNibreath=tapply(DT_omit$Improve_Breathing, list(DT_omit$CCN), mean)
write.csv(CCNibreath,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNibreath.csv")
CCNiwound=tapply(DT_omit$Improve_Wounds, list(DT_omit$CCN), mean)
write.csv(CCNiwound,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNiwound.csv")
CCNid=tapply(DT_omit$Improve_Drugs, list(DT_omit$CCN), mean)
write.csv(CCNall,file="\\Users\\kdivis\\Desktop\\CCNmeans\\CCNall.csv")
system.time(CNNagg <- fread("\\Users\\kdivis\\Desktop\\CCNmeans\\CCNall_aggregate.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
CCNagg_corr=cor(CCNagg, y = NULL, use = "pairwise.complete.obs")
corrgram(CCNagg_corr, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="CCN_corr")
system.time(CCNagg <- fread("\\Users\\kdivis\\Desktop\\CCNmeans\\CCNall_aggregate.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
CCNagg_corr=cor(CCNagg, y = NULL, use = "pairwise.complete.obs")
corrgram(CCNagg_corr, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="CCN_corr")
system.time(CCNagg <- fread("\\Users\\kdivis\\Desktop\\CCNmeans\\CCNall_aggregate.csv",header=TRUE,stringsAsFactors=TRUE,na.strings=c("",NA,"NULL")))
CCNagg_corr=cor(CCNagg, y = NULL, use = "pairwise.complete.obs")
corrgram(CCNagg_corr, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="CCN_corr")
install.packages("corrplot")
library(corrplot)
corrplot(CCNagg_corr, method = "ellipse")
corrplot(CCNagg_corr, method = "circle")
corrplot(CCNagg_corr, method = "pie")
corrplot(CCNagg_corr, method = "number")
corrplot.mixed(CCNagg, lower ="pie", upper="number")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="FPC")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="hclust")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="alphabet")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE")
cor.mtest <- function(mat, conf.level = 0.95) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], conf.level = conf.level)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
lowCI.mat[i, j] <- lowCI.mat[j, i] <- tmp$conf.int[1]
uppCI.mat[i, j] <- uppCI.mat[j, i] <- tmp$conf.int[2]
}
}
return(list(p.mat, lowCI.mat, uppCI.mat))
}
res1 <- cor.mtest(CCNagg_corr, 0.95)
corrplot(M, p.mat = res1[[1]], sig.level = 0.2)
corrplot(CCNagg_corr, p.mat = res1[[1]], sig.level = 0.2)
corrplot(CCNagg_corr, p.mat = res1[[1]], insig = "p-value")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE")
col1 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "white", "cyan",
"#007FFF", "blue", "#00007F"))
col2 <- colorRampPalette(c("#67001F", "#B2182B", "#D6604D", "#F4A582", "#FDDBC7",
"#FFFFFF", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC", "#053061"))
col3 <- colorRampPalette(c("red", "white", "blue"))
col4 <- colorRampPalette(c("#7F0000", "red", "#FF7F00", "yellow", "#7FFF7F",
"cyan", "#007FFF", "blue", "#00007F"))
wb <- c("white", "black")
## using these color spectrums
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE", col=col1(100))
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE", col=col1(100), addCoef.col="blue")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE", col=col1(100), addCoef.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade", upper="pie", order="AOE", col=col1(100), addCoef.col="black")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE", col=col1(100), addCoef.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade", upper="pie", order="AOE", col=col1(100), addCoef.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade", upper="pie", order="AOE", col=col1(100), addCoef.col="black", diag=FALSE)
corrplot.mixed(CCNagg_corr, lower ="shade", upper="pie", order="AOE", col=col1(100), addCoef.col="black", tl.color="black")
corrplot.mixed(CCNagg_corr, lower ="shade", upper="pie", order="AOE", col=col1(100), addCoef.col="black", tl.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade", lower="number",upper="pie", order="AOE", col=col1(100), addCoef.col="black", tl.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", col=col1(100), tl.col="black")
corrgram(CCNagg_corr, order=TRUE, lower.panel=panel.shade,upper.panel=panel.pie, text.panel=panel.txt,main="CCN_corr")
save.image("C:/Users/kdivis/Desktop/CCN_corr.jpg.RData")
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", col=col1(100), addCoef.col="black", tl.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", col=col1(100), addCoef.col="black", tl.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", col=col1(100), tl.col="black")
corrplot.mixed(CCNagg_corr, lower ="pie", upper="number", order="AOE")
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", tl.col="black")
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", tl.col="black", col = col3(20))
corrplot.mixed(CCNagg_corr, lower ="shade",upper="pie", order="AOE", col=col1(100), addCoef.col="black", tl.col="black")
install.packages("rAltmetric")
library(rAltmetric)
acuna = altmetrics (doi = '10.1038/489201a')
acuna
names(acuna)
almetric_data(acuna)
altmetric_data(acuna)
library(ggplot2)
search()
install.packages("devtools")
library(devtools)
find_rtools
find_rtools()
library(KernSmooth)
install.packages("swirl")
library("swirl")
swirl()
swirl()
bye()
install_from_swirl("R Programming")
swirl()
5+7
x=5+7
x<=5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div=z/my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir=getwd()
old.dir<-getwd()
dir.create(testdir)
dir.create('testdir')
setwd('testdir')
file.create(mytest.R)
file.create('mytest.R')
ls()
dir()
file.exists('mytest.R')
file.info('mytest.R')
arg(file.rename)
args(file.rename)
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path(mytest3.R)
file.path('mytest3.R')
file.path('folder1','folder2')
?dir.create
dir.create('testdir2','testdir3',recursive = TRUE)
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
unlink('testdir2',recursive=TRUE)
setwd(old.dir)
unlink('testdir',recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=.5)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=19)
rep(c(0,1,2), each=10)
num_vect<-c(.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("my","name","is")
my_char<-c("My","name","is")
my_char
past(my_char,collapse=" ")
paste(my_char,collapse=" ")
my_name<-c(my_char,"spinningseasons")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z", sep = ""))
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep ="-")
x <- 4L
class(x)
x  <- c(4,"a", T)
class(x)
x=c(1,3,5)
y=c(3,2,10)
rbind(x,y)
x=list(2,"a","b",T)
x[[1]]
x=1:4
y=2:3
x+y
clas(x+y)
class(x+y)
x=c(17,14,4,5,13,12,10)
x[x>10]==4
x[x>10]<-4
x
x<-4
class(x)
x<-c(4,"a",T)
class(x)
x<-list(2,"a","b",T)
y=x[[1]]
class(y)
length(y)
x=1:4
y=2
x+y
x=c(17,14,4,5,13,12,10)
x[x>10]<-4
x
directory="\\Users\\kdivis\\Desktop\\CourseraDataScience\\R_Programming\\specdata"
corr <- function(directory, threshold = 0){
setwd(directory)
source("complete.R")
cases=complete(directory)
caseDim=dim(cases)
counter = 0
countLength=0
caseCount=0
for (i in 1:caseDim[1]){
if (i<10) {fileName=paste("00",toString(i),".csv",sep="")}
else if (i <100) {fileName=paste("0",toString(i),".csv",sep="")}
else {fileName=paste(toString(i),".csv",sep="")}
tempData=na.omit(read.csv(fileName, header=TRUE))
caseCount=caseCount+1
cases[caseCount,3]=cor(tempData$sulfate,tempData$nitrate)
}
for (i in 1:caseDim[1]){
if (cases[i,2]>threshold){
countLength=countLength+1
}
}
if (countLength==0){output=numeric()}
else{
completeCases=data.frame(numeric(countLength),numeric(countLength),numeric(countLength))
for (i in 1:caseDim[1]){
if (cases[i,2]>threshold){
counter=counter+1
completeCases[(counter),1]=cases[i,1]
completeCases[(counter),2]=cases[i,2]
completeCases[(counter),3]=cases[i,3]
}
}
}
output=completeCases[,3]
output
}
cr <- corr("specdata", 150)
head(cr)
corr("specdata",150)
corr(directory,150)
cr=corr(directory,150)
head(cr)
summary(cr)
cr=corr(directory,400)
head(cr)
summary(cr)
cr=corr(directory,5000)
summary(cr)
corr <- function(directory, threshold = 0){
setwd(directory)
source("complete.R")
cases=complete(directory)
caseDim=dim(cases)
counter = 0
countLength=0
caseCount=0
for (i in 1:caseDim[1]){
if (i<10) {fileName=paste("00",toString(i),".csv",sep="")}
else if (i <100) {fileName=paste("0",toString(i),".csv",sep="")}
else {fileName=paste(toString(i),".csv",sep="")}
tempData=na.omit(read.csv(fileName, header=TRUE))
caseCount=caseCount+1
cases[caseCount,3]=cor(tempData$sulfate,tempData$nitrate)
}
for (i in 1:caseDim[1]){
if (cases[i,2]>threshold){
countLength=countLength+1
}
}
if (countLength==0){completeCases=numeric()}
else{
completeCases=data.frame(numeric(countLength),numeric(countLength),numeric(countLength))
for (i in 1:caseDim[1]){
if (cases[i,2]>threshold){
counter=counter+1
completeCases[(counter),1]=cases[i,1]
completeCases[(counter),2]=cases[i,2]
completeCases[(counter),3]=cases[i,3]
}
}
}
output=completeCases[,3]
output
}
cr=corr(directory,5000)
summary(cr)
corr <- function(directory, threshold = 0){
setwd(directory)
source("complete.R")
cases=complete(directory)
caseDim=dim(cases)
counter = 0
countLength=0
caseCount=0
for (i in 1:caseDim[1]){
if (i<10) {fileName=paste("00",toString(i),".csv",sep="")}
else if (i <100) {fileName=paste("0",toString(i),".csv",sep="")}
else {fileName=paste(toString(i),".csv",sep="")}
tempData=na.omit(read.csv(fileName, header=TRUE))
caseCount=caseCount+1
cases[caseCount,3]=cor(tempData$sulfate,tempData$nitrate)
}
for (i in 1:caseDim[1]){
if (cases[i,2]>threshold){
countLength=countLength+1
}
}
if (countLength==0){output=numeric()}
else{
completeCases=data.frame(numeric(countLength),numeric(countLength),numeric(countLength))
for (i in 1:caseDim[1]){
if (cases[i,2]>threshold){
counter=counter+1
completeCases[(counter),1]=cases[i,1]
completeCases[(counter),2]=cases[i,2]
completeCases[(counter),3]=cases[i,3]
}
}
output=completeCases[,3]
}
output
}
cr=corr(directory,5000)
summary(cr)
length(cr)
cr=corr(directory)
length(cr)
summary(cr)
